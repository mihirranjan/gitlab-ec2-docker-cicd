cache:
  paths:
    - node_modules

stages:
  - test
  - build
  - publish
  - deploy

test:
  stage: test
  image: node:12
  script:
    - npm run test

build:
  stage: build
  image: node:12
  script:
    - npm run build

dev-publish:
  stage: publish
  only:
    - develop
  image: docker:18-git
  services:
    - docker:18-dind
  script:
    - cp $DEV_ENV .env
    - apk update && apk add jq
    - export VERSION=`jq -r ".version" < ./package.json`
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:$VERSION -t $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$VERSION
    - docker push $CI_REGISTRY_IMAGE:latest

dev-deploy:
  stage: deploy
  only:
    - develop
  image: node:14
  script:
    - chmod og- "$SSH_PRIVATE_KEY"
    - chmod 0400 "$SSH_PRIVATE_KEY"
    - apk update && apk add openssh-client
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SSH_USER@$DEV_EC2_IPADDRESS "docker stop $CI_PROJECT_NAME || true"
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SSH_USER@$DEV_EC2_IPADDRESS "docker rm $CI_PROJECT_NAME || true"
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SSH_USER@$DEV_EC2_IPADDRESS "docker image rm $CI_REGISTRY_IMAGE:latest || true"
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SSH_USER@$DEV_EC2_IPADDRESS "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SSH_USER@$DEV_EC2_IPADDRESS "docker pull $CI_REGISTRY_IMAGE:latest"
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SSH_USER@$DEV_EC2_IPADDRESS "docker run -d --restart unless-stopped --name $CI_PROJECT_NAME -p 80:3000 -e "variableData=Docker-Run-Command" $CI_REGISTRY_IMAGE:latest"

stage-publish:
  stage: publish
  only:
    - stage
  image: docker:18-git
  services:
    - docker:18-dind
  script:
    - cp $STAGE_ENV .env
    - apk update && apk add jq
    - export VERSION=`jq -r ".version" < ./package.json`
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker build -t $CI_REGISTRY_IMAGE:$VERSION -t $CI_REGISTRY_IMAGE:latest .
    - docker push $CI_REGISTRY_IMAGE:$VERSION
    - docker push $CI_REGISTRY_IMAGE:latest

stage-deploy:
  stage: deploy
  only:
    - stage
  image: node:14
  script:
    - chmod og- "$SSH_PRIVATE_KEY"
    - chmod 0400 "$SSH_PRIVATE_KEY"
    - apk update && apk add openssh-client
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SSH_USER@$STAGE_EC2_IPADDRESS "docker stop $CI_PROJECT_NAME || true"
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SSH_USER@$STAGE_EC2_IPADDRESS "docker rm $CI_PROJECT_NAME || true"
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SSH_USER@$STAGE_EC2_IPADDRESS "docker image rm $CI_REGISTRY_IMAGE:latest || true"
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SSH_USER@$STAGE_EC2_IPADDRESS "docker login -u gitlab-ci-token -p $CI_BUILD_TOKEN $CI_REGISTRY"
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SSH_USER@$STAGE_EC2_IPADDRESS "docker pull $CI_REGISTRY_IMAGE:latest"
    - ssh -i $SSH_PRIVATE_KEY -o StrictHostKeyChecking=no $SSH_USER@$STAGE_EC2_IPADDRESS "docker run -d --restart unless-stopped --name $CI_PROJECT_NAME -p 80:3000 -e "variableData=Docker-Run-Command" $CI_REGISTRY_IMAGE:latest"